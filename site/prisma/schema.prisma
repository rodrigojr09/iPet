generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model Account {
    id    String      @id @default(uuid()) @map("_id")
    email String      @unique
    senha String
    role  AccountRole

    profiles  Profile[] @relation("UserPets")
    createdAt DateTime  @default(now())
}

model Profile {
    id         String    @id @default(uuid()) @map("_id")
    tag        String    @unique
    nome       String
    nascimento String
    foto       String
    bio        String
    raca       String
    followers  String[] // lista de IDs de contas que seguem este usuário
    following  String[] // lista de IDs de contas que este usuário segue
    comments   Comment[] @relation("AuthorComments")
    posts      Post[]    @relation("UserPosts")

    account_id String
    account    Account @relation("UserPets", fields: [account_id], references: [id])
}

model Post {
    id        String   @id @default(uuid()) @map("_id")
    titulo    String?
    legenda   String?
    imageUrl  String?
    createdAt DateTime @default(now())
    authorId  String
    author    Profile  @relation("UserPosts", fields: [authorId], references: [id])

    likes    String[] // IDs de contas que curtiram
    comments Comment[] @relation("PostComments")
}

model Comment {
    id        String   @id @default(uuid()) @map("_id")
    postId    String
    authorId  String
    text      String
    createdAt DateTime @default(now())

    post   Post    @relation("PostComments", fields: [postId], references: [id])
    author Profile @relation("AuthorComments", fields: [authorId], references: [id])
}

type Notification {
    id        String           @default(uuid())
    type      NotificationType
    data      Json?
    message   String
    createdAt DateTime         @default(now())
}

enum AccountRole {
    admin
    user
}

enum NotificationType {
    like
    comment
    follow
}
